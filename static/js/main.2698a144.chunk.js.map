{"version":3,"sources":["particle/functions/PiecewiseFunction.ts","particle/functions/Bezier.ts","particle/functions/PiecewiseBezier.ts","components/MainMenu.tsx","WebGL.ts","particle/shaders/particle_frag.glsl.ts","particle/shaders/particle_vert.glsl.ts","particle/ParticleEmitter.ts","particle/Particle.ts","particle/shape/SphereEmitter.ts","particle/util/JSONUtil.ts","particle/functions/ColorGenerator.ts","particle/functions/ConstantValue.ts","particle/ParticleSystem.ts","particle/shape/ConeEmitter.ts","particle/functions/IntervalValue.ts","particle/behaviors/SizeOverLife.ts","particle/functions/ColorRange.ts","particle/behaviors/RotationOverLife.ts","particle/behaviors/ColorOverLife.ts","particle/functions/RandomColor.ts","example/ToonProjectile.ts","components/ApplicationContext.tsx","components/ThreejsViewport.tsx","components/editors/NumberInput.tsx","components/editors/Vector3Editor.tsx","components/ObjectProperties.tsx","particle/functions/Gradient.ts","components/editors/ColorEditor.tsx","components/editors/GeneratorEditor.tsx","components/ParticleSystemProperties.tsx","components/editors/FileInput.tsx","components/ParticleRendererProperties.tsx","components/PropertiesEditor.tsx","components/SceneGraphView.tsx","components/Application.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["PiecewiseFunction","Object","classCallCheck","this","functions","Array","createClass","key","value","t","mid","left","right","length","getStartX","getEndX","i","index","x","func","get","Bezier","p1","p2","p3","p4","p","t2","t3","mt","mt2","mt3","points","dpoints","d","c","dpt","list","j","push","derive","a","b","d0","d1","pt","_p","q","idx","l","hull","span","p0","PiecewiseBezier","_PiecewiseFunction","_this","curves","arguments","undefined","possibleConstructorReturn","getPrototypeOf","call","type","inherits","findFunction","console","error","genValue","segments","result","join","beziers","map","_ref","_ref2","slicedToArray","bezier","start","function","toJSON","MainMenu","_React$PureComponent","apply","react","Menu","inverted","size","Item","as","header","Image","src","style","marginRight","Dropdown","item","simple","text","description","onClick","props","onSaveAs","icon","Divider","Input","placeholder","name","Icon","Header","React","WEBGL","isWebGLAvailable","canvas","document","createElement","window","WebGLRenderingContext","getContext","e","isWebGL2Available","WebGL2RenderingContext","getWebGLErrorMessage","getErrorMessage","getWebGL2ErrorMessage","version","contexts","1","2","message","element","id","fontFamily","fontSize","fontWeight","textAlign","background","color","padding","width","margin","replace","innerHTML","particle_frag_glsl","particle_vert_glsl","ParticleEmitter","_Mesh","system","parameters","geometry","material","rotationBuffer","sizeBuffer","colorBuffer","offsetBuffer","tiling","uvTileBuffer","InstancedBufferGeometry","float32Array","Float32Array","uniforms","defines","interleavedBuffer","InterleavedBuffer","setIndex","addAttribute","InterleavedBufferAttribute","InstancedBufferAttribute","maxParticle","setDynamic","texture","Uniform","Matrix3","copy","matrix","uTileCount","vTileCount","tileCount","Vector2","worldSpace","ShaderMaterial","vertexShader","particle_vert","fragmentShader","particle_frag","transparent","depthWrite","blending","AdditiveBlending","frustumCulled","particles","particleNum","maxInstancedCount","particle","setXYZ","position","y","z","setXYZW","w","setX","rotation","uvTile","updateRange","count","needsUpdate","meta","output","object","uuid","castShadow","receiveShadow","visible","renderOrder","JSON","stringify","userData","layers","mask","toArray","matrixAutoUpdate","isMesh","drawMode","TrianglesDrawMode","ps","children","Mesh","Particle","startSpeed","startColor","Vector4","startSize","velocity","Vector3","age","life","angularVelocity","SphereEmitter","radius","arc","thickness","Math","PI","u","random","v","rand","_Math","lerp","theta","phi","acos","r","cbrt","sinTheta","sin","cosTheta","cos","sinPhi","cosPhi","setScalar","addScaledVector","multiplyScalar","ColorToJSON","g","ConstantColor","ConstantValue","ParticleSystem","looping","duration","startLife","startRotation","startTileIndex","emissionOverTime","emissionOverDistance","time","waitEmiting","behaviors","emitterShape","emitter","normalMatrix","shape","set","genColor","initialize","applyMatrix4","matrixWorld","applyMatrix3","delta","end","getNormalMatrix","spawn","update","behavior","ConeEmitter","angle","sqrt","IntervalValue","SizeOverLife","ColorRange","RotationOverLife","angularVelocityFunc","ColerOverLife","dot","RandomColor","ToonProjectile","_Group","smoke","glowBeam","mainBeam","TextureLoader","load","addBehavior","add","NormalBlending","rotateY","Group","ApplicationContext","ApplicationContextConsumer","Consumer","ApplicationContextProvider","_React$Component","toonProjectile","removeObject3d","object3D","parent","remove","addObject3d","state","scene","BoxBufferGeometry","MeshStandardMaterial","actions","select","setState","animate","updateProperties","THREE","Color","axisHelper","AxesHelper","light","PointLight","ambientLight","AmbientLight","script","selection","file","Blob","href","URL","createObjectURL","download","click","selectAddition","indexOf","duplicateObject3d","updateParticleSystem","Provider","ThreejsViewport","container","stats","camera","renderer","clock","controls","appContext","onReize","event","domElement","parentElement","clientWidth","clientHeight","height","newWidth","newHeight","aspect","updateProjectionMatrix","setSize","requestAnimationFrame","renderScene","init","prevProps","prevState","snapshot","current","body","appendChild","WebGLRenderer","extensions","getElementById","display","Clock","PerspectiveCamera","OrbitControls","enableDamping","dampingFactor","rotateSpeed","setPixelRatio","devicePixelRatio","Stats","dom","getDelta","traverse","render","_this2","log","context","ref","NumberInput","_React$useState","_React$useState2","inputValue","setInputValue","_React$useState3","_React$useState4","focus","setFocus","className","onChange","target","onBlur","parseFloat","onFocus","onKeyDown","Vector3Editor","_this$props","_this$props$unitConve","unitConversion","NumberInput_NumberInput","ObjectProperties","onChangePosition","object3d","onChangeScale","scale","onChangeRotation","Vector3Editor_Vector3Editor","Gradient","getFunction","ConvertToColor","concat","ColorEditor","open","setOpen","backgroundColor","lib","colorResult","min","rgb","ValueToEditor","functionValue","functionColor","GeneratorEditor","changeEditor","generator","updateGenerator","changeValue","changeColor","changeValueA","interval","changeValueB","changeColorRangeA","colorRange","changeColorRangeB","changeRandomColorA","randomColor","changeRandomColorB","allowedType","editorTypes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","valueType","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","editorType","err","return","editor","currentEditor","getEditorType","ColorEditor_ColorEditor","selected","ParticleSystemProperties","onChangeStartSpeed","particleSystem","onChangeStartLife","onChangeStartSize","onChangeStartColor","OnChangeStartRotation","valueFunctionTypes","colorValueFunctionTypes","GeneratorEditor_GeneratorEditor","FileInput","handleChange","files","fileName","ParticleRendererProperties","onChangeTexture","image","Texture","onload","reader","FileReader","readAsDataURL","onChangeStartTile","onChangeUTileCount","onChangeVTileCount","FileInput_FileInput","PropertiesEditor","_getPrototypeOf2","_len","args","_key","activeIndex","valueGenerator","colorGenerator","panels","title","content","ObjectProperties_ObjectProperties","ParticleSystemProperties_ParticleSystemProperties","ParticleRendererProperties_ParticleRendererProperties","Accordion","fluid","styled","exclusive","SceneGraphItemView","react_default","react_contexify_lib","data","marginLeft","indent","getObjectName","SceneGraphView","onContextMenuClick","onContextMenuAddParticleSystem","onContextMenuRemove","_ref3","openedIndex","nextProps","nextState","nextContext","items","SceneGraphView_SceneGraphItemView","child","renderObject","label","disabled","Component","Application","ApplicationContext_ApplicationContextProvider","MainMenu_MainMenu","ThreejsViewport_ThreejsViewport","SceneGraphView_SceneGraphView","PropertiesEditor_PropertiesEditor","App","_useState","useState","_useState2","Application_Application","Boolean","location","hostname","match","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2698a144.chunk.js","sourcesContent":["export abstract class PiecewiseFunction<T> {\n\n    public functions: Array<[T, number]>;\n\n    protected constructor() {\n        this.functions = new Array<[T, number]>();\n    }\n\n    protected findFunction(t: number): number {\n        let mid = 0;\n        let left = 0, right = this.functions.length - 1;\n        while (left + 1 < right) {\n            mid = (left + right) / 2;\n            if (t < this.getStartX(mid))\n                right = mid - 1;\n            else if (t > this.getEndX(mid))\n                left = mid + 1;\n            else\n                return mid;\n        }\n        for (let i = left; i <= right; i ++) {\n            if (t >= this.functions[i][1] && t <= this.getEndX(i))\n                return i;\n        }\n        return -1;\n    }\n\n    getStartX(index: number) {\n        return this.functions[index][1];\n    }\n    setStartX(index: number, x: number) {\n        if (index > 0)\n            this.functions[index][1] = x;\n    }\n    getEndX(index: number) {\n        if (index + 1 < this.functions.length)\n            return this.functions[index + 1][1];\n        return 1;\n    }\n    setEndX(index: number, x: number) {\n        if (index + 1 < this.functions.length)\n            this.functions[index + 1][1] = x;\n    }\n\n    getFunction(index: number) {\n        return this.functions[index][0];\n    }\n\n    setFunction(index: number, func: T) {\n        this.functions[index][0] = func;\n    }\n\n    get numOfFunctions() {\n        return this.functions.length\n    }\n\n}","export class Bezier {\n    p: number[];\n\n    constructor(p1: number, p2: number, p3: number, p4: number) {\n        this.p = [p1 ,p2, p3, p4];\n    }\n\n    genValue(t: number): number {\n        const t2 = t * t;\n        const t3 = t * t * t;\n        const mt = 1 - t;\n        const mt2 = mt * mt;\n        const mt3 = mt2 * mt;\n        return this.p[0] * mt3 + this.p[1] * mt2 * t * 3 + this.p[2] * mt * t2 * 3 + this.p[3] * t3;\n    }\n\n    derive(points: number[]): number[][] {\n        let dpoints = [];\n        for (let p = points, d = p.length, c = d - 1; d > 1; d--, c--) {\n            let list = [];\n            for (let j = 0, dpt; j < c; j++) {\n                dpt = c * (p[j + 1] - p[j]);\n                list.push(dpt);\n            }\n            dpoints.push(list);\n            p = list;\n        }\n        return dpoints;\n    }\n\n    derivative(t: number): number {\n        const p = this.derive(this.p)[0];\n        const mt = 1 - t;\n        const a = mt * mt;\n        const b = mt * t * 2;\n        const c = t * t;\n        return  a * p[0] + b * p[1] + c * p[2];\n        return  a * (p[1] - p[0]) * 3 + b * (p[2] - p[1]) * 3 + c * (p[3] - p[2]) * 3;\n    }\n\n    // derivative(0) = (p[1] - p[0]) * 3\n    // derivative(1) = (p[3] - p[2]) * 3\n    controlCurve(d0: number, d1: number) {\n        this.p[1] = d0 / 3 + this.p[0];\n        this.p[2] = this.p[3] - d1 / 3;\n    }\n\n    hull(t: number) {\n        let p = this.p;\n        let _p = [],\n            pt,\n            q = [],\n            idx = 0,\n            i = 0,\n            l = 0;\n        q[idx++] = p[0];\n        q[idx++] = p[1];\n        q[idx++] = p[2];\n        q[idx++] = p[3];\n\n        // we lerp between all points at each iteration, until we have 1 point left.\n        while (p.length > 1) {\n            _p = [];\n            for (i = 0, l = p.length - 1; i < l; i++) {\n                pt = t * p[i] + (1 - t) * p[i + 1];\n                q[idx++] = pt;\n                _p.push(pt);\n            }\n            p = _p;\n        }\n        return q;\n    }\n\n    split(t: number) {\n        // no shortcut: use \"de Casteljau\" iteration.\n        let q = this.hull(t);\n        let result = {\n            left : new Bezier(q[0], q[4], q[7], q[9]),\n            right: new Bezier(q[9], q[8], q[6], q[3]),\n            span: q\n        };\n        return result;\n    }\n\n    clone() {\n        return new Bezier(this.p[0], this.p[1], this.p[2], this.p[3]);\n    }\n\n    toJSON() {\n        return {\n            p0 : this.p[0],\n            p1 : this.p[1],\n            p2 : this.p[2],\n            p3 : this.p[3],\n        };\n    }\n}\n\n","import {FunctionValueGenerator, ValueGenerator} from \"./ValueGenerator\";\nimport {PiecewiseFunction} from \"./PiecewiseFunction\";\nimport {Bezier} from \"./Bezier\";\nimport {FunctionJSON} from \"./FunctionJSON\";\nimport {ColorToJSON} from \"../util/JSONUtil\";\n\nexport class PiecewiseBezier extends PiecewiseFunction<Bezier> implements FunctionValueGenerator {\n\n    // default linear bezier\n    constructor(curves: Array<[Bezier, number]> = [[new Bezier(0, 1.0 / 3, 1.0 / 3 * 2, 1), 0]]) {\n        super();\n        this.type = \"function\";\n        this.functions = curves;\n    }\n\n    genValue(t: number = 0): number {\n        let index = this.findFunction(t);\n        if (index === -1) {\n            console.error(t);\n            return 0;\n        }\n        return this.functions[index][0].genValue( (t - this.getStartX(index)) / (this.getEndX(index) - this.getStartX(index)));\n    }\n\n    toSVG(length: number, segments: number) {\n        if (segments < 1)\n            return \"\";\n        let result = [\"M\", 0, this.functions[0][0].p[0]].join(\" \");\n        for (let i = 1.0 / segments; i <= 1; i += 1.0 / segments) {\n            result = [result, \"L\", i * length, this.genValue(i)].join(\" \");\n        }\n        return result;\n    }\n\n    type: \"function\";\n\n    toJSON(): FunctionJSON {\n        return {\n            type: \"piecewiseBezier\",\n            beziers: this.functions.map(([bezier, start]) => ({function: bezier.toJSON(), start: start})),\n        };\n    }\n}","import * as React from \"react\";\nimport {Dropdown, Grid, Icon, Image, Input, Menu} from \"semantic-ui-react\";\n\ninterface MainMenuProps {\n    onSaveAs: ()=>void;\n}\n\nexport class MainMenu extends React.PureComponent<MainMenuProps> {\n    render() {\n        return (\n            <Menu inverted size=\"tiny\">\n                <Menu.Item as='a' header>\n                    <Image size='mini' src='/logo.png' style={{ marginRight: '1.5em' }} />\n                    Three.Quarks\n                </Menu.Item>\n\n                <Dropdown item simple text='File'>\n                    <Dropdown.Menu>\n                        <Dropdown.Item text='New' />\n                        <Dropdown.Item text='Open...' description='ctrl + o' />\n                        <Dropdown.Item text='Save as...' description='ctrl + s' onClick={this.props.onSaveAs} />\n                        <Dropdown.Item text='Rename' description='ctrl + r' />\n                        <Dropdown.Item text='Make a copy' />\n                        <Dropdown.Item icon='folder' text='Move to folder' />\n                        <Dropdown.Item icon='trash' text='Move to trash' />\n                        <Dropdown.Divider />\n                        <Dropdown.Item text='Download As...' />\n                        <Dropdown.Item text='Publish To Web' />\n                        <Dropdown.Item text='E-mail Collaborators' />\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <Dropdown item simple text='Edit'>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>\n                            <Input placeholder='Search...' />\n                        </Dropdown.Item>\n\n                        <Dropdown item simple text='Home'>\n                            <Dropdown.Menu>\n                                <Dropdown.Item\n                                    name='search'>\n                                    Search\n                                </Dropdown.Item>\n                                <Dropdown.Item name='add'>\n                                    Add\n                                </Dropdown.Item>\n                                <Dropdown.Item name='about'>\n                                    Remove\n                                </Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n\n                        <Dropdown.Item name='browse'>\n                            <Icon name='grid layout' />\n                            Browse\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                            name='messages'\n                        >\n                            Messages\n                        </Dropdown.Item>\n\n                        <Dropdown item simple text='More'>\n                            <Dropdown.Menu>\n                                <Dropdown.Item icon='edit' text='Edit Profile' />\n                                <Dropdown.Item icon='globe' text='Choose Language' />\n                                <Dropdown.Item icon='settings' text='Account Settings' />\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <Dropdown item simple text='Tools'>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>List Item</Dropdown.Item>\n                        <Dropdown.Item>List Item</Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Header>Header Item</Dropdown.Header>\n                        <Dropdown item simple text='Dropdown'>\n                            <Dropdown.Menu>\n                                <Dropdown.Item>List Item</Dropdown.Item>\n                                <Dropdown.Item>List Item</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                        <Dropdown.Item>List Item</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <Menu.Item as='a'>About</Menu.Item>\n            </Menu>);\n    }\n}","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nexport const WEBGL = {\n    isWebGLAvailable: function () {\n\n        try {\n            const canvas = document.createElement( 'canvas' );\n            // @ts-ignore\n            return !! ( window.WebGLRenderingContext && ( canvas.getContext( 'webgl' ) || canvas.getContext( 'experimental-webgl' ) ) );\n        } catch ( e ) {\n            return false;\n        }\n\n    },\n\n    isWebGL2Available: function () {\n        try {\n            const canvas = document.createElement( 'canvas' );\n            // @ts-ignore\n            return !! ( window.WebGL2RenderingContext && canvas.getContext( 'webgl2' ) );\n        } catch ( e ) {\n            return false;\n        }\n    },\n\n    getWebGLErrorMessage: function () {\n        return this.getErrorMessage( 1 );\n    },\n\n    getWebGL2ErrorMessage: function () {\n        return this.getErrorMessage( 2 );\n    },\n\n    getErrorMessage: function ( version: number ) {\n        const names :{[version:number]: string} = {\n            1: 'WebGL',\n            2: 'WebGL 2'\n        };\n\n        const contexts :{[version:number]: string} = {\n            // @ts-ignore\n            1: window.WebGLRenderingContext,\n            // @ts-ignore\n            2: window.WebGL2RenderingContext\n        };\n\n        let message = 'Your $0 does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">$1</a>';\n\n        const element = document.createElement( 'div' );\n        element.id = 'webglmessage';\n        element.style.fontFamily = 'monospace';\n        element.style.fontSize = '13px';\n        element.style.fontWeight = 'normal';\n        element.style.textAlign = 'center';\n        element.style.background = '#fff';\n        element.style.color = '#000';\n        element.style.padding = '1.5em';\n        element.style.width = '400px';\n        element.style.margin = '5em auto 0';\n\n        if ( contexts[ version ] ) {\n            message = message.replace( '$0', 'graphics card' );\n        } else {\n            message = message.replace( '$0', 'browser' );\n        }\n        message = message.replace( '$1', names[ version ] );\n        element.innerHTML = message;\n\n        return element;\n    }\n\n};\n","export default /* glsl */`\n\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvarying vec4 vColor;\n\nvoid main() {\n\n    #include <clipping_planes_fragment>\n    \n    vec3 outgoingLight = vec3( 0.0 );\n    vec4 diffuseColor = vColor;\n    \n    #include <logdepthbuf_fragment>\n    \n    #ifdef USE_MAP\n    vec4 texelColor = texture2D( map, vUv);\n    diffuseColor *= texelColor;\n    #endif\n\n    outgoingLight = diffuseColor.rgb;\n\n    gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n    \n    #include <tonemapping_fragment>\n\n}\n`;\n/*\n    gl_FragColor = vec4(vUv.x, vUv.y, 1.0, 1.0);\n\n    #ifdef USE_MAP\n    vec4 texelColor = texture2D( map, vUv);\n    diffuseColor *= texelColor;\n    #endif\n\n    outgoingLight = diffuseColor.rgb;\n\n    gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n*/","export default /* glsl */`\n\n#include <uv_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nattribute vec3 offset;\nattribute float rotation;\nattribute float size;\nattribute vec4 color;\nattribute float uvTile;\n\nvarying vec4 vColor;\n\n#ifdef UV_TILE\nuniform vec2 tileCount;\n#endif\n\nvoid main() {\n\n    #ifdef UV_TILE\n        vUv = vec2((mod(uvTile, tileCount.y) + uv.x) * (1.0 / tileCount.x), ((tileCount.y - floor(uvTile / tileCount.y) - 1.0) + uv.y) * (1.0 / tileCount.y));\n    #else\n        #include <uv_vertex>\n    #endif\n\t\n\t#ifdef WORLD_SPACE\n\t    vec4 mvPosition = viewMatrix * vec4( offset, 1.0 );\n\t#else\n\t    vec4 mvPosition = modelViewMatrix * vec4( offset, 1.0 );\n\t#endif\n\t\n    vec2 alignedPosition = ( position.xy ) * size;\n    \n    vec2 rotatedPosition;\n    rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n    rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n    \n    mvPosition.xy += rotatedPosition;\n\n\tvColor = color;\n\n\tgl_Position = projectionMatrix * mvPosition;\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n}\n`;\n/*\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\t\tif ( isPerspective ) computedSize *= - mvPosition.z;\n\t#endif\n */\n","import {Behavior} from './Behavior';\nimport {Particle} from './Particle';\nimport {ParticleSystem} from './ParticleSystem';\nimport {\n    AdditiveBlending,\n    Blending,\n    BufferAttribute,\n    InstancedBufferAttribute,\n    InstancedBufferGeometry,\n    InterleavedBuffer,\n    InterleavedBufferAttribute, Matrix3, Mesh, ShaderMaterial, Texture, TrianglesDrawMode, Uniform, Vector2, Vector4\n} from 'three';\n\nimport particle_frag from './shaders/particle_frag.glsl';\nimport particle_vert from './shaders/particle_vert.glsl';\n\nexport interface ParticleRendererParameters {\n    texture?: Texture;\n    uTileCount?: number;\n    vTileCount?: number;\n    worldSpace?: boolean;\n    blending?: Blending;\n}\n\n\nexport class ParticleEmitter extends Mesh {\n\n    system: ParticleSystem;\n    geometry: InstancedBufferGeometry;\n    material: ShaderMaterial;\n    private rotationBuffer: InstancedBufferAttribute;\n    private sizeBuffer: InstancedBufferAttribute;\n    private colorBuffer: InstancedBufferAttribute;\n    private offsetBuffer: InstancedBufferAttribute;\n\n    private tiling: boolean;\n    private uvTileBuffer?: InstancedBufferAttribute;\n\n    constructor(system: ParticleSystem, parameters: ParticleRendererParameters) {\n        super();\n        this.system = system;\n        this.geometry = new InstancedBufferGeometry();\n\n        const float32Array = new Float32Array([\n            -0.5, -0.5, 0, 0, 0,\n            0.5, -0.5, 0, 1, 0,\n            0.5, 0.5, 0, 1, 1,\n            -0.5, 0.5, 0, 0, 1\n        ]);\n\n        let uniforms: {[a:string]:Uniform} = {};\n        let defines: {[b:string]:string} = {};\n\n        const interleavedBuffer = new InterleavedBuffer(float32Array, 5);\n\n        this.geometry.setIndex([0, 1, 2, 0, 2, 3]);\n        this.geometry.addAttribute('position', new InterleavedBufferAttribute(interleavedBuffer, 3, 0, false));\n        this.geometry.addAttribute('uv', new InterleavedBufferAttribute(interleavedBuffer, 2, 3, false));\n\n        this.offsetBuffer = new InstancedBufferAttribute(new Float32Array(system.maxParticle * 3), 3);\n        this.offsetBuffer.setDynamic(true);\n        this.geometry.addAttribute('offset', this.offsetBuffer);\n        this.colorBuffer = new InstancedBufferAttribute(new Float32Array(system.maxParticle * 4), 4);\n        this.colorBuffer.setDynamic(true);\n        this.geometry.addAttribute('color', this.colorBuffer);\n        this.rotationBuffer = new InstancedBufferAttribute(new Float32Array(system.maxParticle), 1);\n        this.rotationBuffer.setDynamic(true);\n        this.geometry.addAttribute('rotation', this.rotationBuffer);\n        this.sizeBuffer = new InstancedBufferAttribute(new Float32Array(system.maxParticle), 1);\n        this.sizeBuffer.setDynamic(true);\n        this.geometry.addAttribute('size', this.sizeBuffer);\n\n\n        this.tiling = false;\n        if (parameters.texture) {\n            defines['USE_MAP'] = '';\n            uniforms['map'] = new Uniform(parameters.texture);\n            //@ts-ignore\n            uniforms['uvTransform'] = new Uniform(new Matrix3().copy(parameters.texture.matrix));\n\n            let uTileCount = parameters.uTileCount || 1;\n            let vTileCount = parameters.vTileCount || 1;\n            this.tiling = uTileCount > 1 || vTileCount > 1;\n            this.system.tileCount = uTileCount * vTileCount;\n            if (this.tiling) {\n                this.uvTileBuffer = new InstancedBufferAttribute(new Float32Array(system.maxParticle), 1);\n                this.uvTileBuffer.setDynamic(true);\n                this.geometry.addAttribute('uvTile', this.uvTileBuffer);\n                defines['UV_TILE']='';\n                uniforms['tileCount'] = new Uniform(new Vector2(uTileCount, vTileCount));\n            }\n        }\n\n        if (parameters.worldSpace !== undefined? parameters.worldSpace: true) {\n            defines['WORLD_SPACE']='';\n        }\n\n        this.material = new ShaderMaterial({\n            uniforms: uniforms,\n            defines: defines,\n            vertexShader: particle_vert,\n            fragmentShader: particle_frag,\n            transparent: true,\n            depthWrite: false,\n            blending: parameters.blending || AdditiveBlending,\n        });\n\n        // TODO: implement boundingVolume\n        this.frustumCulled = false;\n    }\n\n    update() {\n        const particles = this.system.particles;\n        let particleNum = this.system.particleNum;\n\n        this.geometry.maxInstancedCount = particleNum;\n        for (let i = 0; i < particleNum; i ++) {\n            let particle = particles[i];\n            this.offsetBuffer.setXYZ(i, particle.position.x, particle.position.y, particle.position.z);\n            this.colorBuffer.setXYZW(i, particle.color.x, particle.color.y, particle.color.z, particle.color.w);\n            this.rotationBuffer.setX(i, particle.rotation);\n            this.sizeBuffer.setX(i, particle.size);\n            if (this.tiling) {\n                this.uvTileBuffer!.setX(i, particle.uvTile);\n            }\n        }\n\n        if (particleNum > 0) {\n            this.offsetBuffer.updateRange.count = particleNum * 3;\n            this.offsetBuffer.needsUpdate = true;\n\n            this.colorBuffer.updateRange.count = particleNum * 4;\n            this.colorBuffer.needsUpdate = true;\n\n            this.rotationBuffer.updateRange.count = particleNum;\n            this.rotationBuffer.needsUpdate = true;\n\n            this.sizeBuffer.updateRange.count = particleNum;\n            this.sizeBuffer.needsUpdate = true;\n\n            if (this.tiling) {\n                this.uvTileBuffer!.updateRange.count = particleNum;\n                this.uvTileBuffer!.needsUpdate = true;\n            }\n        }\n    }\n\n    toJSON(meta?: { geometries: any; materials: any; textures: any; images: any }): any {\n        let output: any = {};\n\n        // standard Object3D serialization\n\n        let object: any = {};\n\n        object.uuid = this.uuid;\n        object.type = this.type;\n\n        if ( this.name !== '' ) object.name = this.name;\n        if ( this.castShadow === true ) object.castShadow = true;\n        if ( this.receiveShadow === true ) object.receiveShadow = true;\n        if ( this.visible === false ) object.visible = false;\n        if ( this.frustumCulled === false ) object.frustumCulled = false;\n        if ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\n        if ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n        object.layers = this.layers.mask;\n        object.matrix = this.matrix.toArray();\n\n        if ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n        // object specific properties\n\n        if ( this.isMesh && this.drawMode !== TrianglesDrawMode ) object.drawMode = this.drawMode;\n\n        object.ps = this.system.toJSON();\n\n\n        // children\n        if ( this.children.length > 0 ) {\n            object.children = [];\n            for ( var i = 0; i < this.children.length; i ++ ) {\n                object.children.push( this.children[ i ].toJSON( meta ).object );\n            }\n        }\n\n        output.object = object;\n\n        return output;\n    }\n}\n","import {Color, Vector3, Vector4} from \"three\";\n\nexport class Particle {\n\n    // CPU\n    startSpeed: number = 0;\n    startColor: Vector4 = new Vector4();\n    startSize: number = 1;\n    velocity: Vector3 = new Vector3();\n    age: number = 0;\n    life: number = 1;\n\n    // extra\n    angularVelocity?: number;\n\n    // GPU\n    position: Vector3 = new Vector3();\n    rotation: number = 0;\n    size: number = 1;\n    color: Vector4 = new Vector4();\n    uvTile: number = 0;\n\n}","import {EmitterShape, ShapeJSON} from \"../EmitterShape\";\nimport {Particle} from \"../Particle\";\nimport {Vector3, Math as _Math} from \"three\";\n\nexport interface SphereEmitterParameters {\n    radius?: number;\n    arc?: number;\n    thickness?: number;\n}\n\nexport class SphereEmitter implements EmitterShape {\n\n    radius: number;\n    arc: number;\n    thickness: number; //[0, 1]\n\n    constructor(parameters: SphereEmitterParameters = {}) {\n        this.radius = parameters.radius || 10;\n        this.arc = parameters.arc || 2.0 * Math.PI;\n        this.thickness = parameters.thickness || 1;\n    }\n\n    initialize(p: Particle) {\n        const u = Math.random();\n        const v = Math.random();\n        const rand = _Math.lerp(1 - this.thickness, 1, Math.random());\n        const theta = u * this.arc;\n        const phi = Math.acos(2.0 * v - 1.0);\n        const r = Math.cbrt(rand);\n        const sinTheta = Math.sin(theta);\n        const cosTheta = Math.cos(theta);\n        const sinPhi = Math.sin(phi);\n        const cosPhi = Math.cos(phi);\n        p.position.x = r * sinPhi * cosTheta;\n        p.position.y = r * sinPhi * sinTheta;\n        p.position.z = r * cosPhi;\n\n        p.velocity.setScalar(0).addScaledVector(p.position, p.startSpeed);\n        p.position.multiplyScalar(this.radius);\n    }\n\n    toJSON(): ShapeJSON {\n        return {\n            type: \"sphere\",\n            radius: this.radius,\n            arc: this.arc,\n            thickness: this.thickness,\n        };\n    }\n}","import {Vector4} from \"three\";\n\nexport const ColorToJSON = (color: Vector4) => {\n    return {r: color.x, g: color.y, b: color.z, a: color.w};\n};\n\nexport const JSONToColor = (json: any) => {\n    return new Vector4(json.r, json.g, json.b, json.a);\n};","import {Vector4} from \"three\";\nimport {FunctionJSON} from \"./FunctionJSON\";\nimport {ColorToJSON} from \"../util/JSONUtil\";\n\nexport interface ColorGenerator {\n    type: 'value';\n    genColor(color: Vector4): Vector4;\n    toJSON(): FunctionJSON;\n}\n\nexport interface FunctionColorGenerator {\n    type: 'function';\n    genColor(color: Vector4, t: number): Vector4;\n    toJSON(): FunctionJSON;\n}\n\nexport class ConstantColor implements ColorGenerator {\n    constructor(public color: Vector4) {\n        this.type = 'value';\n    }\n    genColor(color: Vector4): Vector4 {\n        return color.copy(this.color);\n    }\n\n    type: \"value\";\n\n    toJSON(): FunctionJSON {\n        return {\n            type: \"constantColor\",\n            color: ColorToJSON(this.color)\n        };\n    }\n}","import {ValueGenerator} from \"./ValueGenerator\";\nimport {FunctionJSON} from \"./FunctionJSON\";\n\nexport class ConstantValue implements ValueGenerator {\n    type: \"value\";\n    constructor(public value: number) {\n        this.type = 'value';\n    }\n\n    genValue(): number {\n        return this.value;\n    }\n\n\n    toJSON(): FunctionJSON {\n        return {\n            type: \"constantValue\",\n            value: this.value\n        };\n    }\n}","import {FunctionValueGenerator, ValueGenerator} from \"./functions/ValueGenerator\";\nimport {Behavior} from \"./Behavior\";\nimport {Particle} from \"./Particle\";\nimport {ParticleEmitter} from \"./ParticleEmitter\";\nimport {EmitterShape, ShapeJSON} from \"./EmitterShape\";\nimport {ConeEmitter} from \"./shape/ConeEmitter\";\nimport {Blending, Matrix3, Texture, Vector4} from \"three\";\nimport {SphereEmitter} from \"./shape/SphereEmitter\";\nimport {ColorGenerator, ConstantColor, FunctionColorGenerator} from \"./functions/ColorGenerator\";\nimport {ConstantValue} from \"./functions/ConstantValue\";\nimport {FunctionJSON} from \"./functions/FunctionJSON\";\n\n\nexport interface ParticleSystemParameters {\n    // parameters\n    looping?: boolean;\n    duration?: number;\n    maxParticle?: number;\n\n    shape?: EmitterShape;\n    startLife?: ValueGenerator | FunctionValueGenerator;\n    startSpeed?: ValueGenerator | FunctionValueGenerator;\n    startRotation?: ValueGenerator | FunctionValueGenerator;\n    startSize?: ValueGenerator | FunctionValueGenerator;\n    startColor?: ColorGenerator | FunctionColorGenerator;\n    emissionOverTime?: ValueGenerator | FunctionValueGenerator;\n    emissionOverDistance?: ValueGenerator | FunctionValueGenerator;\n\n    texture?: Texture;\n    startTileIndex?: number;\n    uTileCount?: number;\n    vTileCount?: number;\n    blending?: Blending;\n\n    worldSpace?: boolean;\n\n}\n\nexport interface ParticleSystemJSONParameters {\n\n    // parameters\n    looping: boolean;\n    duration: number;\n    maxParticle: number;\n\n    shape: ShapeJSON;\n    startLife: FunctionJSON;\n    startSpeed: FunctionJSON;\n    startRotation: FunctionJSON;\n    startSize: FunctionJSON;\n    startColor: FunctionJSON;\n    emissionOverTime: FunctionJSON;\n    emissionOverDistance: FunctionJSON;\n\n    texture: string;\n    startTileIndex: number;\n    uTileCount: number;\n    vTileCount: number;\n    blending: number;\n\n    behaviors: Array<any>;\n\n    worldSpace: boolean;\n}\n\nexport class ParticleSystem {\n    // parameters\n    looping: boolean;\n    duration: number;\n    maxParticle: number;\n    startLife: ValueGenerator | FunctionValueGenerator;\n    startSpeed: ValueGenerator | FunctionValueGenerator;\n    startRotation: ValueGenerator | FunctionValueGenerator;\n    startSize: ValueGenerator | FunctionValueGenerator;\n    startColor: ColorGenerator | FunctionColorGenerator;\n    startTileIndex: number;\n\n    emissionOverTime: ValueGenerator | FunctionValueGenerator;\n    emissionOverDistance: ValueGenerator | FunctionValueGenerator;\n\n    tileCount: number = 1;\n    worldSpace: boolean;\n\n    // runtime data\n    particleNum: number;\n    private time: number;\n    private waitEmiting: number;\n\n    private behaviors: Array<Behavior>;\n\n    particles: Array<Particle>;\n    emitterShape: EmitterShape;\n    emitter: ParticleEmitter;\n\n    get texture() {\n        return this.emitter.material.uniforms.map.value;\n    }\n\n    set texture(texture: Texture) {\n        this.emitter.material.uniforms.map.value = texture;\n    }\n\n\n    get uTileCount() {\n        return this.emitter.material.uniforms.tileCount.value.x;\n    }\n\n    set uTileCount(u: number) {\n        this.emitter.material.uniforms.tileCount.value.x = u;\n    }\n\n    get vTileCount() {\n        return this.emitter.material.uniforms.tileCount.value.y;\n    }\n\n    set vTileCount(v: number) {\n        this.emitter.material.uniforms.tileCount.value.y = v;\n    }\n\n    get blending() {\n        return this.emitter.material.blending;\n    }\n\n    set blending(blending) {\n        this.emitter.material.blending = blending;\n    }\n\n    constructor(parameters: ParticleSystemParameters = {}) {\n        this.duration = parameters.duration || 1;\n        this.maxParticle = parameters.maxParticle || 100;\n        this.looping = parameters.looping === undefined ? true : parameters.looping;\n        this.startLife = parameters.startLife || new ConstantValue(5);\n        this.startSpeed = parameters.startSpeed || new ConstantValue(0);\n        this.startRotation = parameters.startRotation || new ConstantValue(0);\n        this.startSize = parameters.startSize || new ConstantValue(1);\n        this.startColor = parameters.startColor || new ConstantColor(new Vector4(1, 1, 1, 1));\n        this.emissionOverTime = parameters.emissionOverTime || new ConstantValue(10);\n        this.emissionOverDistance = parameters.emissionOverDistance || new ConstantValue(0);\n        this.emitterShape = parameters.shape || new SphereEmitter();\n\n        if (parameters.worldSpace === undefined)\n            parameters.worldSpace = true;\n        this.worldSpace = parameters.worldSpace;\n\n        this.behaviors = new Array<Behavior>();\n        this.particles = new Array<Particle>();\n\n\n        this.startTileIndex = parameters.startTileIndex || 0;\n        this.emitter = new ParticleEmitter(this, parameters);\n\n        this.particleNum = 0;\n\n        this.time = 0;\n        this.waitEmiting = 0;\n    }\n\n    end() {\n\n    }\n\n    spawn() {\n        while (this.particleNum >= this.particles.length) {\n            this.particles.push(new Particle());\n        }\n        this.particleNum++;\n        const particle = this.particles[this.particleNum - 1];\n\n        this.startColor.genColor(particle.startColor, this.time);\n        particle.color.copy(particle.startColor);\n        particle.startSpeed = this.startSpeed.genValue(this.time);\n        particle.life = this.startLife.genValue(this.time);\n        particle.age = 0;\n        particle.rotation = this.startRotation.genValue(this.time);\n        particle.startSize = particle.size = this.startSize.genValue(this.time);\n        particle.uvTile = this.startTileIndex;\n\n        this.emitterShape.initialize(particle);\n\n        if (this.worldSpace) {\n            particle.position.applyMatrix4(this.emitter.matrixWorld);\n            particle.velocity.applyMatrix3(this.normalMatrix);\n        }\n\n        for (let j = 0; j < this.behaviors.length; j++) {\n            this.behaviors[j].initialize(particle);\n        }\n    }\n\n    normalMatrix: Matrix3 = new Matrix3();\n\n    update(delta: number) {\n        if (delta > 0.1)\n            delta = 0.1;\n\n        if (this.time > this.duration) {\n            if (this.looping) {\n                this.time -= this.duration;\n            } else {\n                this.end();\n                return;\n            }\n        }\n\n        this.normalMatrix.getNormalMatrix(this.emitter.matrixWorld);\n\n        // particle die\n        for (let i = 0; i < this.particleNum; i++) {\n            let particle = this.particles[i];\n            if (particle.age >= particle.life) {\n                this.particles[i] = this.particles[this.particleNum - 1];\n                this.particles[this.particleNum - 1] = particle;\n                this.particleNum--;\n                i --;\n            }\n        }\n\n        // spawn\n        while (this.waitEmiting > 0 && this.particleNum < this.maxParticle) {\n            this.spawn();\n            this.waitEmiting--;\n        }\n\n        for (let i = 0; i < this.particleNum; i++) {\n            let particle = this.particles[i];\n\n            for (let j = 0; j < this.behaviors.length; j++) {\n                this.behaviors[j].update(particle, delta);\n            }\n            particle.position.addScaledVector(particle.velocity, delta);\n            particle.age += delta;\n        }\n        //console.log(this.particleNum + \" \" + this.particles.length);\n        this.emitter.update();\n\n        this.waitEmiting += delta * this.emissionOverTime.genValue(this.time);\n        this.time += delta;\n    }\n\n    toJSON(): ParticleSystemJSONParameters {\n        return {\n            looping: this.looping,\n            duration: this.duration,\n            maxParticle: this.maxParticle,\n\n            shape: this.emitterShape.toJSON(),\n            startLife: this.startLife.toJSON(),\n            startSpeed: this.startSpeed.toJSON(),\n            startRotation: this.startRotation.toJSON(),\n            startSize: this.startSize.toJSON(),\n            startColor: this.startColor.toJSON(),\n            emissionOverTime: this.emissionOverTime.toJSON(),\n            emissionOverDistance: this.emissionOverDistance.toJSON(),\n\n            texture: this.texture.name,\n            startTileIndex: this.startTileIndex,\n            uTileCount: this.uTileCount,\n            vTileCount: this.vTileCount,\n            blending: this.blending,\n\n            behaviors: this.behaviors.map(behavior => behavior.toJSON()),\n\n            worldSpace: this.worldSpace,\n        };\n    }\n\n    addBehavior(behavior: Behavior) {\n        this.behaviors.push(behavior);\n    }\n}","import {EmitterShape, ShapeJSON} from \"../EmitterShape\";\nimport {Particle} from \"../Particle\";\nimport {Vector3, Math as _Math} from \"three\";\n\nexport interface ConeEmitterParameters {\n    radius?: number;\n    arc?: number;\n    thickness?: number;\n    angle?: number; // [0, Math.PI / 2]\n}\n\nexport class ConeEmitter implements EmitterShape {\n\n    radius: number;\n    arc: number; // [0, Math.PI * 2]\n    thickness: number;\n    angle: number; // [0, Math.PI / 2]\n\n    constructor(parameters: ConeEmitterParameters = {}) {\n        this.radius = parameters.radius || 10;\n        this.arc = parameters.arc || 2.0 * Math.PI;\n        this.thickness = parameters.thickness || 1;\n        this.angle = parameters.angle || Math.PI / 6;\n    }\n\n    initialize(p: Particle) {\n        const u = Math.random();\n        const rand = _Math.lerp(1 - this.thickness, 1, Math.random());\n        const theta = u * this.arc;\n        const r = Math.sqrt(rand);\n        const sinTheta = Math.sin(theta);\n        const cosTheta = Math.cos(theta);\n        p.position.x = r * cosTheta;\n        p.position.y = r * sinTheta;\n        p.position.z = 0;\n\n        const angle = this.angle * r;\n        p.velocity.set(0, 0, Math.cos(angle)).addScaledVector(p.position, Math.sin(angle)).multiplyScalar(p.startSpeed);\n        //const v = Math.random();\n        p.position.multiplyScalar(this.radius);\n    }\n\n    toJSON(): ShapeJSON {\n        return {\n            type: \"sphere\",\n            radius: this.radius,\n            arc: this.arc,\n            thickness: this.thickness,\n            angle: this.angle,\n        };\n    }\n}","import {ValueGenerator} from \"./ValueGenerator\";\nimport {Math as _Math} from \"three\";\nimport {FunctionJSON} from \"./FunctionJSON\";\nimport {ColorToJSON} from \"../util/JSONUtil\";\n\nexport class IntervalValue implements ValueGenerator {\n\n    constructor(public a: number, public b: number) {\n        this.type = \"value\";\n    }\n\n    genValue(): number {\n        return _Math.lerp(this.a, this.b, Math.random());\n    }\n\n    type: \"value\";\n\n    toJSON(): FunctionJSON {\n        return {\n            type: \"intervalValue\",\n            a: this.a,\n            b: this.b,\n        };\n    }\n}","import {Behavior} from \"../Behavior\";\nimport {Particle} from \"../Particle\";\nimport {FunctionValueGenerator} from \"../functions/ValueGenerator\";\n\nexport class SizeOverLife implements Behavior {\n    initialize(particle: Particle): void {\n    }\n\n    constructor(public func: FunctionValueGenerator) {\n    }\n\n    update(particle: Particle): void {\n        particle.size = particle.startSize * this.func.genValue(particle.age / particle.life);\n    }\n    toJSON(): any {\n        return {\n            type: 'SizeOverLife',\n            func: this.func.toJSON(),\n        };\n    }\n}","import {Math as _Math, Vector4} from \"three\";\nimport {ColorGenerator, FunctionColorGenerator} from \"./ColorGenerator\";\nimport {FunctionJSON} from \"./FunctionJSON\";\nimport {ColorToJSON} from \"../util/JSONUtil\";\n\nexport class ColorRange implements FunctionColorGenerator {\n    constructor(public a: Vector4, public b: Vector4) {\n        this.type = \"function\";\n    }\n\n    genColor(color: Vector4, t: number): Vector4 {\n        return color.copy(this.a).lerp(this.b, t);\n    }\n\n    type: \"function\";\n\n    toJSON(): FunctionJSON {\n        return {\n            type: \"colorRange\",\n            a: ColorToJSON(this.a),\n            b: ColorToJSON(this.b),\n        };\n    }\n}","import {Behavior} from \"../Behavior\";\nimport {Particle} from \"../Particle\";\nimport {FunctionValueGenerator, ValueGenerator} from \"../functions/ValueGenerator\";\n\nexport class RotationOverLife implements Behavior {\n\n    constructor(public angularVelocityFunc: FunctionValueGenerator | ValueGenerator) {\n    }\n\n    initialize(particle: Particle): void {\n        if (this.angularVelocityFunc.type === 'value') {\n            particle.angularVelocity = this.angularVelocityFunc.genValue();\n        } else {\n            particle.angularVelocity = 0;\n        }\n    }\n\n    update(particle: Particle, delta: number): void {\n        if (this.angularVelocityFunc.type === 'value') {\n            particle.rotation += delta * particle.angularVelocity!;\n        } else {\n            particle.rotation += delta * this.angularVelocityFunc.genValue(particle.age / particle.life);\n        }\n    }\n    toJSON(): any {\n        return {\n            type: 'RotationOverLife',\n            angularVelocityFunc: this.angularVelocityFunc.toJSON(),\n        };\n    }\n}","import {Behavior} from \"../Behavior\";\nimport {Particle} from \"../Particle\";\nimport {FunctionColorGenerator} from \"../functions/ColorGenerator\";\n\nexport class ColerOverLife implements Behavior {\n\n    constructor(public func: FunctionColorGenerator) {\n    }\n\n    initialize(particle: Particle): void {\n    }\n\n    update(particle: Particle, delta: number): void {\n        this.func.genColor(particle.color, particle.age / particle.life).dot(particle.startColor);\n    }\n\n    toJSON(): any {\n        return {\n            type: 'ColerOverLife',\n            func: this.func.toJSON(),\n        };\n    }\n}","import {Math as _Math, Vector4} from \"three\";\nimport {ColorGenerator} from \"./ColorGenerator\";\nimport {FunctionJSON} from \"./FunctionJSON\";\nimport {ColorToJSON} from \"../util/JSONUtil\";\n\nexport class RandomColor implements ColorGenerator {\n    constructor(public a: Vector4, public b: Vector4) {\n        this.type = \"value\";\n    }\n\n    genColor(color: Vector4): Vector4 {\n        const rand = Math.random();\n        return color.copy(this.a).lerp(this.b, rand);\n    }\n\n    type: \"value\";\n\n    toJSON(): FunctionJSON {\n        return {\n            type: \"randomColor\",\n            a: ColorToJSON(this.a),\n            b: ColorToJSON(this.b),\n        };\n    }\n}","import {AdditiveBlending, Group, NormalBlending, TextureLoader, Vector4} from \"three\";\nimport {ParticleSystem} from \"../particle/ParticleSystem\";\nimport {ConeEmitter} from \"../particle/shape/ConeEmitter\";\nimport {IntervalValue} from \"../particle/functions/IntervalValue\";\nimport {SizeOverLife} from \"../particle/behaviors/SizeOverLife\";\nimport {PiecewiseBezier} from \"../particle/functions/PiecewiseBezier\";\nimport {ColorRange} from \"../particle/functions/ColorRange\";\nimport {ConstantColor} from \"../particle/functions/ColorGenerator\";\nimport {SphereEmitter} from \"../particle/shape/SphereEmitter\";\nimport {RotationOverLife} from \"../particle/behaviors/RotationOverLife\";\nimport {ConstantValue} from \"../particle/functions/ConstantValue\";\nimport {Bezier} from \"../particle/functions/Bezier\";\nimport {ColerOverLife} from \"../particle/behaviors/ColorOverLife\";\nimport {Gradient} from \"../particle/functions/Gradient\";\nimport {RandomColor} from \"../particle/functions/RandomColor\";\n\nexport class ToonProjectile extends Group {\n    private particles: ParticleSystem;\n    private smoke: ParticleSystem;\n    private glowBeam: ParticleSystem;\n    private mainBeam: ParticleSystem;\n\n    constructor() {\n        super();\n\n        let texture = new TextureLoader().load( \"textures/texture1.png\");\n\n        this.mainBeam = new ParticleSystem({\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.1, 0.15),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(1.25),\n            startColor: new ConstantColor(new Vector4(1, 1, 1, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(40),\n\n            shape: new SphereEmitter({\n                radius: .0001,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.mainBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.mainBeam.emitter.renderOrder = 2;\n        this.mainBeam.emitter.name = 'mainBeam';\n\n        this.add(this.mainBeam.emitter);\n\n        this.glowBeam = new ParticleSystem({\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.1, 0.15),\n            startSpeed: new ConstantValue(0),\n            startSize: new ConstantValue(3.5),\n            startColor: new ConstantColor(new Vector4(1, 0.1509503, 0.07352942, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(40),\n\n            shape: new SphereEmitter({\n                radius: .0001,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 1,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.glowBeam.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.glowBeam.emitter.renderOrder = 2;\n        this.glowBeam.emitter.name = 'glowBeam';\n\n        this.add(this.glowBeam.emitter);\n\n\n        this.particles = new ParticleSystem({\n            duration: 1,\n            looping: true,\n            startLife: new IntervalValue(0.3, 0.6),\n            startSpeed: new IntervalValue(2, 5),\n            startSize: new IntervalValue(.1, .4),\n            startColor: new RandomColor(new Vector4(1,1,1,.5), new Vector4(1, 0.1509503, 0.07352942, .5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(60),\n\n            shape: new ConeEmitter({\n                angle: 4.8423 / 180 * Math.PI,\n                radius: .3,\n                thickness: 1,\n                arc: Math.PI * 2,\n            }),\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.particles.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.25, 0.05, 0), 0]])));\n        this.particles.emitter.renderOrder = 2;\n        this.particles.emitter.rotateY(-Math.PI/2);\n        this.particles.emitter.name = 'particles';\n\n        this.add(this.particles.emitter);\n\n        this.smoke = new ParticleSystem({\n            startLife: new IntervalValue(0.25, 0.3),\n            startSpeed: new ConstantValue(0),\n            startSize: new IntervalValue(.75, 1.25),\n            startRotation: new IntervalValue(0, Math.PI * 2),\n            startColor: new ConstantColor(new Vector4(1,1,1,.5)),\n            worldSpace: true,\n\n            maxParticle: 100,\n            emissionOverTime: new ConstantValue(20),\n            shape: new SphereEmitter({\n                radius: .2,\n                thickness: 1,\n            }),\n\n            texture: texture,\n            blending: NormalBlending,\n            startTileIndex: 2,\n            uTileCount: 10,\n            vTileCount: 10,\n        });\n        this.smoke.addBehavior(new SizeOverLife(new PiecewiseBezier([[new Bezier(1, 0.95, 0.75, 0), 0]])));\n        this.smoke.addBehavior(new ColerOverLife(new ColorRange(new Vector4(1, 0.1509503, 0.07352942, 1), new Vector4(0, 0, 0, 0))));\n        this.smoke.addBehavior(new RotationOverLife(new IntervalValue(-Math.PI * 2, Math.PI * 2)));\n        this.smoke.emitter.renderOrder = -2;\n        this.smoke.emitter.name = 'smoke';\n\n        this.add(this.smoke.emitter);\n\n    }\n\n    update(delta: number) {\n        this.mainBeam.update(delta);\n        this.glowBeam.update(delta);\n        this.particles.update(delta);\n        this.smoke.update(delta);\n    }\n}\n","import * as React from \"react\";\nimport * as THREE from \"three\";\nimport {Object3D} from \"three\";\nimport {ParticleEmitter} from \"../particle/ParticleEmitter\";\nimport {Application} from \"./Application\";\nimport {TextureLoader} from \"three\";\nimport {ParticleSystem} from \"../particle/ParticleSystem\";\nimport {ConeEmitter} from \"../particle/shape/ConeEmitter\";\nimport {ConstantValue} from \"../particle/functions/ConstantValue\";\nimport {ConstantColor} from \"../particle/functions/ColorGenerator\";\nimport {Vector4} from \"three\";\nimport {AdditiveBlending} from \"three\";\nimport {Mesh} from \"three\";\nimport {BoxBufferGeometry} from \"three\";\nimport {MeshStandardMaterial} from \"three\";\nimport {ToonProjectile} from \"../example/ToonProjectile\";\nimport {Color} from \"three\";\nimport {AxesHelper} from \"three\";\nimport {PointLight} from \"three\";\nimport {AmbientLight} from \"three\";\n\n\ninterface ApplicationContextProps {\n\n}\n\nexport interface AppContext {\n    scene: THREE.Scene;\n    script: (delta: number) => void;\n    selection: Array<Object3D>;\n    actions: {\n        onSaveAs: ()=>void;\n        select: (object: Object3D) => void;\n        selectAddition: (object: Object3D) => void;\n        addObject3d: (type: string, parent: Object3D) => void;\n        removeObject3d: (object: Object3D) => void;\n        duplicateObject3d: (object: Object3D) => void;\n        updateParticleSystem: (object: ParticleEmitter) => void;\n        updateProperties: () => void;\n    }\n}\n\nconst ApplicationContext = React.createContext<AppContext | null>(null);\n\nexport const ApplicationContextConsumer = ApplicationContext.Consumer;\n\nexport class ApplicationContextProvider extends React.Component<ApplicationContextProps, AppContext> {\n\n    toonProjectile: ToonProjectile;\n\n    constructor(props: Readonly<ApplicationContextProps>) {\n        super(props);\n\n        const scene = new THREE.Scene();\n\n        scene.background = new Color(0x666666);\n\n        this.toonProjectile = new ToonProjectile();\n        this.toonProjectile.name = \"Toon Projectile\";\n        scene.add(this.toonProjectile);\n\n        const axisHelper = new AxesHelper(100);\n        axisHelper.name = \"axisHelper\";\n        scene.add(axisHelper);\n\n        const light = new PointLight(new Color(1, 1, 1), 0.8, 200);\n        light.position.set(50, 50, 50);\n        scene.add(light);\n\n        const ambientLight = new AmbientLight(new Color(1, 1, 1), 0.2);\n        scene.add(ambientLight);\n\n        const state: AppContext = {\n            scene: scene,\n            script: this.animate,\n            selection: [],\n            actions: {\n                onSaveAs: () => {\n                    const a = document.createElement(\"a\");\n                    const file = new Blob([JSON.stringify(state.scene.toJSON())], {type: \"application/json\"});\n                    a.href = URL.createObjectURL(file);\n                    a.download = \"scene.json\";\n                    a.click();\n                },\n                select: object => {\n                    this.setState({selection: [object]});\n                },\n                selectAddition: object => {\n                    if (state.selection.indexOf(object) === -1) {\n                        state.selection.push(object);\n                        this.setState({selection: state.selection});\n                    }\n                },\n                addObject3d: this.addObject3d,\n                removeObject3d: this.removeObject3d,\n                duplicateObject3d: () => {\n                },\n                updateParticleSystem: () => {\n                },\n                updateProperties: () => {\n                    this.setState({scene: scene});\n                }\n            }\n        };\n\n        this.state = state;\n    }\n\n    removeObject3d = (object3D: Object3D) => {\n        if (object3D.parent) {\n            object3D.parent.remove(object3D);\n        }\n    };\n\n    addObject3d = (type: string, parent: Object3D) => {\n        let object;\n        switch (type) {\n            case 'particle':\n                let texture = new TextureLoader().load(\"textures/texture1.png\");\n                const particleSystem = new ParticleSystem({\n                    maxParticle: 10000,\n                    shape: new ConeEmitter(),\n                    emissionOverTime: new ConstantValue(100),\n                    startLife: new ConstantValue(30),\n                    startSpeed: new ConstantValue(10),\n                    startSize: new ConstantValue(1),\n                    startColor: new ConstantColor(new Vector4(1, 1, 1, 1)),\n                    texture: texture,\n                    blending: AdditiveBlending,\n                    startTileIndex: 0,\n                    uTileCount: 10,\n                    vTileCount: 10,\n                    worldSpace: true,\n                });\n                object = particleSystem.emitter;\n                this.state.scene.add(object);\n                break;\n            case 'box':\n                object = new Mesh(new BoxBufferGeometry(10, 10, 10), new MeshStandardMaterial({color: 0xcccccc}));\n                this.state.scene.add(object);\n                break;\n        }\n        if (object) {\n            parent.add(object);\n            this.state.actions.select(object);\n            this.setState({});\n        }\n    };\n\n\n    update = 0;\n    animate = (delta: number) => {\n        this.toonProjectile!.position.x += delta * 30;\n        if (this.toonProjectile!.position.x > 20)\n            this.toonProjectile!.position.x = -20;\n\n        this.update += delta;\n        if (this.update > 0.1) {\n            this.state.actions.updateProperties();\n            this.update = 0;\n        }\n    };\n\n    render() {\n        //console.log( \"rendering ApplicationContext \");\n        return (\n            <ApplicationContext.Provider value={this.state}>\n                {this.props.children}\n            </ApplicationContext.Provider>\n        )\n    }\n}\n/*\n        this.particleSystem = new ParticleSystem({\n            maxParticle: 10000,\n            shape: new ConeEmitter(),\n            emissionOverTime: new ConstantValue(100),\n            startLife: new ConstantValue(30),\n            startSpeed: new ConstantValue(10),\n            startSize: new ConstantValue(1),\n            startColor: new ConstantColor(new Vector4(1,1,1, 1)),\n            texture: texture,\n            blending: AdditiveBlending,\n            startTileIndex: 0,\n            uTileCount: 10,\n            vTileCount: 10,\n            worldSpace: true,\n        });*/\n//this.particleSystem.emitter.position.set(10, 0, 0);\n//scene.add(this.particleSystem.emitter);","import * as React from \"react\";\nimport Stats from \"stats.js\";\nimport {WEBGL} from \"../WebGL\";\nimport {\n    PerspectiveCamera,\n    Scene,\n    WebGLRenderer,\n    Clock,\n    PointLight,\n    Color,\n    SphereBufferGeometry,\n    Mesh,\n    MeshStandardMaterial, AmbientLight, Vector4, TextureLoader, AdditiveBlending, AxesHelper\n} from \"three\";\nimport {ParticleSystem} from \"../particle/ParticleSystem\";\nimport {RefObject} from \"react\";\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\";\nimport {ConeEmitter} from \"../particle/shape/ConeEmitter\";\nimport {ConstantColor} from \"../particle/functions/ColorGenerator\";\nimport {ToonProjectile} from \"../example/ToonProjectile\";\nimport {ConstantValue} from \"../particle/functions/ConstantValue\";\nimport {ParticleEmitter} from \"../particle/ParticleEmitter\";\nimport {AppContext, ApplicationContextConsumer} from \"./ApplicationContext\";\n\ninterface ThreejsViewportProps {\n    width: number;\n    height: number;\n}\n\nexport class ThreejsViewport extends React.PureComponent<ThreejsViewportProps> {\n    container: RefObject<HTMLDivElement>;\n    stats?: Stats;\n    camera?: PerspectiveCamera;\n    renderer?: WebGLRenderer;\n    private clock?: Clock;\n    private controls?: OrbitControls;\n\n    private appContext?: AppContext;\n\n    constructor(props: Readonly<ThreejsViewportProps>) {\n        super(props);\n        this.container = React.createRef();\n    }\n\n    componentDidMount(): void {\n        if ( this.init() ) {\n            this.animate();\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<ThreejsViewportProps>, prevState: Readonly<{}>, snapshot?: any): void {\n        this.camera!.aspect = this.props.width / this.props.height;\n        this.camera!.updateProjectionMatrix();\n        this.renderer!.setSize( this.props.width, this.props.height );\n    }\n\n    init() {\n        if (!this.container.current) {\n            return false;\n        }\n\n        if ( WEBGL.isWebGLAvailable() === false ) {\n            document.body.appendChild( WEBGL.getWebGLErrorMessage() );\n            return false;\n        }\n\n        this.renderer = new WebGLRenderer();\n\n        if ( this.renderer.extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n            document.getElementById( 'notSupported' )!.style.display = '';\n            return false;\n\n        }\n\n        let width = this.props.width;\n        let height = this.props.height;\n\n        this.clock = new Clock();\n\n        this.camera = new PerspectiveCamera( 50, width / height, 1, 1000 );\n        this.camera.position.set(50, 50, 50);\n\n        this.controls = new OrbitControls( this.camera, this.renderer.domElement );\n        this.controls.enableDamping = true;\n        this.controls.dampingFactor = 0.1;\n        this.controls.rotateSpeed = 0.2;\n        this.controls.update();\n\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.renderer.setSize( width, height );\n        this.container.current!.appendChild( this.renderer.domElement );\n\n        this.stats = new Stats();\n        this.stats.dom.style.position = \"absolute\";\n        this.stats.dom.style.left = \"\";\n        this.stats.dom.style.right = \"0\";\n        this.container.current!.appendChild( this.stats.dom );\n\n        //window.addEventListener( 'resize', this.onWindowResize, false );\n\n        this.onReize(null);\n\n        return true;\n\n    }\n\n    onReize = ( event: any ) => {\n\n        if (this.renderer!.domElement.parentElement!.clientWidth - 10 != this.renderer!.domElement.width ||\n            this.renderer!.domElement.parentElement!.clientHeight - 10 != this.renderer!.domElement.height) {\n\n            const newWidth = this.renderer!.domElement.parentElement!.clientWidth - 10;\n            const newHeight = this.renderer!.domElement.parentElement!.clientHeight - 10;\n\n            this.camera!.aspect = newWidth / newHeight;\n            this.camera!.updateProjectionMatrix();\n            this.renderer!.domElement.style.width = '100%';\n            this.renderer!.domElement.style.height = '100%';\n            this.renderer!.setSize(newWidth, newHeight);\n        }\n    };\n\n    animate = () => {\n        requestAnimationFrame( this.animate );\n\n        this.onReize(null);\n        this.renderScene();\n        this.stats!.update();\n    };\n\n    renderScene() {\n        if (this.appContext) {\n            this.controls!.update();\n            let delta = this.clock!.getDelta();\n            //let time = performance.now() * 0.0005;\n            //this.particleSystem!.update(this.clock!.getDelta());\n            this.appContext.script(delta);\n            //this.particleSystem!.emitter.rotation.y = this.clock!.getElapsedTime();\n            //this.particleSystem!.emitter.position.set(Math.cos(this.clock!.getElapsedTime()) * 20, 0, Math.sin(this.clock!.getElapsedTime()) * 20);\n            //console.log(this.particleSystem!.emitter.modelViewMatrix);\n\n            this.appContext.scene.traverse(object => {\n                if (object instanceof ParticleEmitter) {\n                    object.system.update(delta);\n                }\n            });\n\n            this.renderer!.render(this.appContext.scene, this.camera!);\n        }\n    }\n\n    render() {\n        console.log( \"rendering ThreejsViewPort\");\n        return (\n        <ApplicationContextConsumer>\n            { context => {\n                    if (context) {\n                        this.appContext = context;\n                        return <div ref={this.container} style={{width: '100%', height: '100%'}}></div>;\n                    }\n                }\n            }\n        </ApplicationContextConsumer>);\n    }\n}\n","import * as React from 'react';\nimport \"./NumberInput.scss\";\n\ninterface NumberInputProps{\n    value: number;\n    onChange: (value: number)=>void;\n}\n\nexport const NumberInput : React.FC<NumberInputProps> = (props) => {\n\n    const [inputValue, setInputValue] = React.useState(props.value + '');\n    const [focus, setFocus] = React.useState(false);\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (focus) {\n            setInputValue(e.target.value);\n        }\n    };\n\n    const onInputBlur = (e: React.FocusEvent) => {\n        const x = parseFloat(inputValue);\n        if (x !== props.value)\n            props.onChange(x);\n        setFocus(false);\n    };\n\n    const onInputFocus = (e: React.FocusEvent) => {\n        if (inputValue !== props.value + '') {\n            setInputValue(props.value + '');\n        }\n        setFocus(true);\n    };\n\n    const onKeyDown = (e: React.KeyboardEvent) => {\n        const x = parseFloat(inputValue);\n        if (x !== props.value)\n            props.onChange(x);\n    };\n\n    return <input className=\"number-input\" value={focus? inputValue: props.value} size={5}\n            onChange={onInputChange} onBlur={onInputBlur} onFocus={onInputFocus} onKeyDown={onKeyDown}\n        />;\n};\n","import * as React from \"react\";\nimport {NumberInput} from \"./NumberInput\";\n\ninterface Vector3Props {\n    name: string;\n    x: number;\n    y: number;\n    z: number;\n    onChange: (x: number, y: number, z: number)=>void;\n    unitConversion?: number;\n}\n\nexport class Vector3Editor extends React.PureComponent<Vector3Props> {\n    render() {\n        console.log('rendered Vector3');\n        const {x, y, z, unitConversion = 1, onChange, name} = this.props;\n        return(<div className=\"property\">\n                <label className=\"name\">{name}</label>\n                <label>X:</label><NumberInput value={x * unitConversion} onChange={value => {onChange(value / unitConversion, y, z)}}/>\n                <label>Y:</label><NumberInput value={y * unitConversion} onChange={value => {onChange(x, value / unitConversion, z)}}/>\n                <label>Z:</label><NumberInput value={z * unitConversion} onChange={value => {onChange(x, y, value / unitConversion)}}/>\n            </div>\n        );\n    }\n}","import * as React from \"react\";\nimport {Euler, Object3D, Vector3} from \"three\";\nimport {Vector3Editor} from \"./editors/Vector3Editor\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\n\n\ninterface ObjectPropertiesProps {\n    object3d: Object3D,\n    updateProperties: Function,\n}\n\ninterface ObjectPropertiesState {\n\n}\n\nexport class ObjectProperties extends React.PureComponent<ObjectPropertiesProps, ObjectPropertiesState> {\n    constructor(props: Readonly<ObjectPropertiesProps>) {\n        super(props);\n    }\n\n    onChangePosition = (x: number, y: number, z: number) => {\n        this.props.object3d.position.set(x, y, z);\n        this.props.updateProperties();\n    };\n    onChangeScale = (x: number, y: number, z: number) => {\n        this.props.object3d.scale.set(x, y, z);\n        this.props.updateProperties();\n    };\n    onChangeRotation = (x: number, y: number, z: number) => {\n        this.props.object3d.rotation.set(x, y, z);\n        this.props.updateProperties();\n    };\n\n\n    render() {\n        console.log('rendered objectProperties');\n        return (\n            <div>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <Vector3Editor name=\"Position\" x={this.props.object3d.position.x}\n                                       y={this.props.object3d.position.y} z={this.props.object3d.position.z}\n                                       onChange={this.onChangePosition}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <Vector3Editor name=\"Rotation\" x={this.props.object3d.rotation.x}\n                                       y={this.props.object3d.rotation.y} z={this.props.object3d.rotation.z}\n                                       onChange={this.onChangeRotation} unitConversion={180 / Math.PI}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <Vector3Editor name=\"Scale\" x={this.props.object3d.scale.x}\n                                       y={this.props.object3d.scale.y} z={this.props.object3d.scale.z}\n                                       onChange={this.onChangeScale}/>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import {PiecewiseFunction} from \"./PiecewiseFunction\";\nimport {ColorGenerator, FunctionColorGenerator} from \"./ColorGenerator\";\nimport {Vector4} from \"three\";\nimport {ColorRange} from \"./ColorRange\";\nimport {Bezier} from \"./Bezier\";\nimport {FunctionJSON} from \"./FunctionJSON\";\n\nexport class Gradient extends PiecewiseFunction<ColorRange> implements FunctionColorGenerator {\n\n    // default linear bezier\n    constructor(functions: Array<[ColorRange, number]> = [[new ColorRange(new Vector4(0,0,0,1), new Vector4(1,1,1,1)), 0]]) {\n        super();\n        this.type = \"function\";\n        this.functions = functions;\n    }\n\n    genColor(color: Vector4, t: number): Vector4 {\n        let index = this.findFunction(t);\n        if (index === -1) {\n            console.error(t);\n            return color.copy(this.functions[0][0].a);\n        }\n        return this.getFunction(index).genColor(color, t);\n    }\n\n    type: \"function\";\n\n    toJSON(): FunctionJSON {\n        return {};\n    }\n}","import * as React from 'react';\nimport {ColorResult, SketchPicker} from \"react-color\";\nimport {Vector4} from \"three\";\nimport \"./ColorEditor.scss\";\n\ninterface ColorEditorProps {\n    color: Vector4;\n    onChange: (color: Vector4) => void;\n}\n\nfunction ConvertToColor(color: Vector4) {\n    return `rgba(${((color.x * 255) | 0)},${((color.y * 255) | 0)},${((color.z * 255) | 0)},${color.w})`;\n}\n\nexport const ColorEditor: React.FC<ColorEditorProps> = (props) => {\n    const [open, setOpen] = React.useState(false);\n\n    const togglePicker = () => {\n        setOpen(!open);\n    };\n\n    const closePicker = () => {\n        setOpen(false);\n    };\n\n    const colorChange = (colorResult: ColorResult) => {\n        let color = new Vector4();\n        color.x = Math.min(255, colorResult.rgb.r) / 255;\n        color.y = Math.min(255, colorResult.rgb.g) / 255;\n        color.z = Math.min(255, colorResult.rgb.b) / 255;\n        color.w = colorResult.rgb.a!;\n        onChange(color);\n    };\n\n    const {color, onChange} = props;\n\n    return (\n        <div className=\"color-editor\">\n            <button style={{backgroundColor: ConvertToColor(color), height: '20px'}} onClick={togglePicker}/>\n            {ConvertToColor(color)}\n            {\n                open ? <div className=\"popover\">\n                    <div className=\"cover\" onClick={closePicker}/>\n                    <SketchPicker\n                        color={{\n                            r: ((color.x * 255) | 0),\n                            g: ((color.y * 255) | 0),\n                            b: ((color.z * 255) | 0),\n                            a: color.w\n                        }}\n                        onChange={colorChange}/>\n                </div> : null\n            }\n        </div>);\n};\n","import * as React from \"react\";\nimport {FunctionValueGenerator, ValueGenerator} from \"../../particle/functions/ValueGenerator\";\nimport {ColorGenerator, ConstantColor, FunctionColorGenerator} from \"../../particle/functions/ColorGenerator\";\nimport {ConstantValue} from \"../../particle/functions/ConstantValue\";\nimport {Vector4} from \"three\";\nimport {IntervalValue} from \"../../particle/functions/IntervalValue\";\nimport {PiecewiseBezier} from \"../../particle/functions/PiecewiseBezier\";\nimport {ColorRange} from \"../../particle/functions/ColorRange\";\nimport {RandomColor} from \"../../particle/functions/RandomColor\";\nimport {Gradient} from \"../../particle/functions/Gradient\";\nimport {NumberInput} from \"./NumberInput\";\nimport {ColorEditor} from \"./ColorEditor\";\nimport \"./GeneratorEditor.scss\";\n\ntype EditorType =\n    'constant'\n    | 'intervalValue'\n    | 'piecewiseBezier'\n    | 'color'\n    | 'randomColor'\n    | 'colorRange'\n    | 'gradient';\nexport type ValueType = 'value' | 'functionValue' | 'color' | 'functionColor';\n\nconst ValueToEditor: { [a: string]: Array<EditorType> } = {\n    'value': ['constant', 'intervalValue'],\n    'functionValue': ['piecewiseBezier'],\n    'color': ['color', 'randomColor'],\n    'functionColor': ['colorRange', 'gradient'],\n};\n\nexport type GenericGenerator = ValueGenerator | FunctionValueGenerator | ColorGenerator | FunctionColorGenerator;\n\ninterface GeneratorEditorProps {\n    allowedType: Array<ValueType>;\n    name: string;\n    generator: GenericGenerator;\n    updateGenerator: (generator: GenericGenerator) => void;\n}\n\ninterface GeneratorEditorState {\n    open: boolean;\n}\n\nexport class GeneratorEditor extends React.PureComponent<GeneratorEditorProps, GeneratorEditorState> {\n\n    constructor(props: Readonly<GeneratorEditorProps>) {\n        super(props);\n        let currentEditor = ValueToEditor[props.allowedType[0]][0];\n        this.state = {\n            open: false,\n        }\n    }\n    changeEditor = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        const editorType = e.target.value;\n        let generator: GenericGenerator | null = null;\n        switch(editorType) {\n            case \"constant\":\n                generator = new ConstantValue(0);\n                break;\n            case \"color\":\n                generator = new ConstantColor(new Vector4(1,1,1,1));\n                break;\n            case \"intervalValue\":\n                generator = new IntervalValue(0, 1);\n                break;\n            case \"colorRange\":\n                generator = new ColorRange(new Vector4(0,0,0,1), new Vector4(1,1,1,1));\n                break;\n            case \"randomColor\":\n                generator = new RandomColor(new Vector4(0,0,0,1), new Vector4(1,1,1,1));\n                break;\n        }\n        if (generator)\n            this.props.updateGenerator(generator);\n    }\n\n    changeValue = (x: number) => {\n        this.props.updateGenerator(new ConstantValue(x));\n    };\n\n    changeColor = (x: Vector4) => {\n        this.props.updateGenerator(new ConstantColor(x));\n    };\n\n    changeValueA = (x: number) => {\n        const interval = this.props.generator as IntervalValue;\n        this.props.updateGenerator(new IntervalValue(x, interval.b));\n    };\n\n    changeValueB = (x: number) => {\n        const interval = this.props.generator as IntervalValue;\n        this.props.updateGenerator(new IntervalValue(interval.a, x));\n    };\n\n    changeColorRangeA = (x: Vector4) => {\n        const colorRange = this.props.generator as ColorRange;\n        this.props.updateGenerator(new ColorRange(x, colorRange.b));\n    };\n    changeColorRangeB = (x: Vector4) => {\n        const colorRange = this.props.generator as ColorRange;\n        this.props.updateGenerator(new ColorRange(colorRange.a, x));\n    };\n    changeRandomColorA = (x: Vector4) => {\n        const randomColor = this.props.generator as RandomColor;\n        this.props.updateGenerator(new RandomColor(x, randomColor.b));\n    };\n    changeRandomColorB = (x: Vector4) => {\n        const randomColor = this.props.generator as RandomColor;\n        this.props.updateGenerator(new RandomColor(randomColor.a, x));\n    };\n\n    getEditorType(generator: GenericGenerator): EditorType {\n        if (generator instanceof ConstantValue) {\n            return 'constant';\n        } else if (generator instanceof IntervalValue) {\n            return 'intervalValue';\n        } else if (generator instanceof PiecewiseBezier) {\n            return 'piecewiseBezier';\n        } else if (generator instanceof ConstantColor) {\n            return 'color';\n        } else if (generator instanceof RandomColor) {\n            return 'randomColor';\n        } else if (generator instanceof ColorRange) {\n            return 'colorRange';\n        } else if (generator instanceof Gradient) {\n            return 'gradient';\n        }\n        return 'constant';\n    }\n\n    render() {\n        console.log('render GeneratorEditor');\n        const {name, generator, allowedType} = this.props;\n\n        let editorTypes = [];\n        for (let valueType of allowedType) {\n            console.log(valueType);\n            console.log(ValueToEditor[valueType]);\n            for (let editorType of ValueToEditor[valueType]) {\n                editorTypes.push(editorType);\n            }\n        }\n\n        let currentEditor = this.getEditorType(generator);\n\n        let editor;\n        switch (currentEditor) {\n            case \"constant\":\n                editor = <React.Fragment>\n                    <NumberInput value={(generator as ConstantValue).value}\n                                 onChange={this.changeValue}/></React.Fragment>;\n                break;\n            case \"color\":\n                editor = (<React.Fragment>\n                    <ColorEditor color={(generator as ConstantColor).color} onChange={this.changeColor}/>\n                </React.Fragment>);\n                break;\n            case \"intervalValue\":\n                editor = <React.Fragment>\n                    <NumberInput value={(generator as IntervalValue).a}\n                                 onChange={this.changeValueA}/>-<NumberInput\n                        value={(generator as IntervalValue).b} onChange={this.changeValueB}/></React.Fragment>;\n                break;\n            case \"colorRange\":\n                editor = (<React.Fragment>\n                    <ColorEditor color={(generator as ColorRange).a} onChange={this.changeColorRangeA}/>-\n                    <ColorEditor color={(generator as ColorRange).b} onChange={this.changeColorRangeB}/>\n                </React.Fragment>);\n                break;\n            case \"randomColor\":\n                editor = (<React.Fragment>\n                    <ColorEditor color={(generator as RandomColor).a} onChange={this.changeRandomColorA}/>-\n                    <ColorEditor color={(generator as RandomColor).b} onChange={this.changeRandomColorB}/>\n                </React.Fragment>);\n                break;\n        }\n        return <div className=\"property\">\n            <label className=\"name\">{name}</label>\n            {editor}\n            <select className=\"editor-select\" onChange={this.changeEditor}>\n                {editorTypes.map(editorType => <option key={editorType} value={editorType} selected={currentEditor === editorType}>{editorType}</option>)}\n            </select>\n        </div>;\n    }\n}\n","import * as React from \"react\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {GeneratorEditor, GenericGenerator, ValueType} from \"./editors/GeneratorEditor\";\nimport {ParticleSystem} from \"../particle/ParticleSystem\";\nimport {FunctionValueGenerator, ValueGenerator} from \"../particle/functions/ValueGenerator\";\nimport {ColorGenerator, FunctionColorGenerator} from \"../particle/functions/ColorGenerator\";\n\n\ninterface ParticleSystemPropertiesProps {\n    particleSystem: ParticleSystem,\n    updateProperties: Function,\n}\n\ninterface ParticleSystemPropertiesState {\n\n}\n\nexport class ParticleSystemProperties extends React.PureComponent<ParticleSystemPropertiesProps, ParticleSystemPropertiesState> {\n    constructor(props: Readonly<ParticleSystemPropertiesProps>) {\n        super(props);\n    }\n\n    onChangeStartSpeed = (g: GenericGenerator) => {\n        console.log(\"change start speed\");\n        this.props.particleSystem.startSpeed = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    onChangeStartLife = (g: GenericGenerator) => {\n        console.log(\"change start life\");\n        this.props.particleSystem.startLife = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    onChangeStartSize = (g: GenericGenerator) => {\n        console.log(\"change start size\");\n        this.props.particleSystem.startSize = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n    onChangeStartColor = (g: GenericGenerator) => {\n        console.log(\"change start color\");\n        this.props.particleSystem.startColor = g as ColorGenerator | FunctionColorGenerator;\n        this.props.updateProperties();\n    };\n    OnChangeStartRotation = (g: GenericGenerator) => {\n        console.log(\"change start rotation\");\n        this.props.particleSystem.startRotation = g as ValueGenerator | FunctionValueGenerator;\n        this.props.updateProperties();\n    };\n\n    render() {\n        console.log('rendered objectProperties');\n        const valueFunctionTypes = ['value', 'functionValue'] as Array<ValueType>;\n        const colorValueFunctionTypes = ['color', 'functionColor'] as Array<ValueType>;\n        return (\n            <div>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Life\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startLife}\n                                         updateGenerator={this.onChangeStartLife}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Size\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startSize}\n                                         updateGenerator={this.onChangeStartSize}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Speed\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startSpeed}\n                                         updateGenerator={this.onChangeStartSpeed}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Color\"\n                                         allowedType={colorValueFunctionTypes}\n                                         generator={this.props.particleSystem.startColor}\n                                         updateGenerator={this.onChangeStartColor}/>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <GeneratorEditor name=\"Start Rotation\"\n                                         allowedType={valueFunctionTypes}\n                                         generator={this.props.particleSystem.startRotation}\n                                         updateGenerator={this.OnChangeStartRotation}/>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\n\n\ninterface FileInputProps {\n    fileName: string\n    onChange: (files: FileList) => void;\n}\n\nexport class FileInput extends React.Component<FileInputProps>\n{\n    constructor(props: any)\n    {\n        super(props);\n    }\n\n    handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files)\n            this.props.onChange(e.target.files);\n    };\n\n    render ()\n    {\n        return <div>\n            <input type=\"file\" onChange={this.handleChange} />\n            {this.props.fileName}\n        </div>;\n    }\n}","import * as React from \"react\";\nimport {Blending, Texture} from \"three\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {GeneratorEditor, GenericGenerator, ValueType} from \"./editors/GeneratorEditor\";\nimport {ParticleSystem} from \"../particle/ParticleSystem\";\nimport {NumberInput} from \"./editors/NumberInput\";\nimport {FileInput} from \"./editors/FileInput\";\n\n\ninterface ParticleRendererPropertiesProps {\n    particleSystem: ParticleSystem,\n    updateProperties: Function,\n}\n\ninterface ParticleRendererPropertiesState {\n\n}\n\nexport class ParticleRendererProperties extends React.PureComponent<ParticleRendererPropertiesProps, ParticleRendererPropertiesState> {\n    constructor(props: Readonly<ParticleRendererPropertiesProps>) {\n        super(props);\n    }\n\n    onChangeTexture = (files: FileList) => {\n        console.log(\"change texture\");\n        let image = document.createElement( 'img' );\n        let texture = new Texture( image );\n        image.onload = function()  {\n            texture.needsUpdate = true;\n        };\n\n        if (files && files[0]) {\n            let reader = new FileReader();\n            reader.onload = function (e) {\n                image.src = reader.result as string;\n            };\n            reader.readAsDataURL(files[0]);\n        }\n        this.props.particleSystem.texture = texture;\n        this.props.updateProperties();\n    };\n    onChangeStartTile = (index: number) => {\n        this.props.particleSystem.startTileIndex = index;\n        this.props.updateProperties();\n    };\n    onChangeUTileCount = (u: number) => {\n        this.props.particleSystem.uTileCount = u;\n        this.props.updateProperties();\n    };\n    onChangeVTileCount = (v: number) => {\n        this.props.particleSystem.vTileCount = v;\n        this.props.updateProperties();\n    };\n\n    render() {\n        console.log('rendered particleRendererProperties');\n        return (\n            <div>\n\n                texture?: Texture;\n                blending?: Blending;\n                worldSpace?: boolean;\n\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                            <label className=\"name\">UVTile</label>\n                            <label>Column:</label><NumberInput value={this.props.particleSystem.uTileCount} onChange={this.onChangeUTileCount}/>\n                            <label>Row:</label><NumberInput value={this.props.particleSystem.vTileCount} onChange={this.onChangeVTileCount}/>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                            <label className=\"name\">Start Tile Index</label><NumberInput value={this.props.particleSystem.startTileIndex} onChange={this.onChangeStartTile}/>\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n                <ApplicationContextConsumer>\n                    {context => context &&\n                        <div className=\"property\">\n                            <label className=\"name\">Texture</label>\n                            <FileInput fileName={this.props.particleSystem.texture? this.props.particleSystem.texture.name: \"..\"} onChange={this.onChangeTexture} />\n                        </div>\n                    }\n                </ApplicationContextConsumer>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport {Accordion} from \"semantic-ui-react\";\nimport {ConstantValue} from \"../particle/functions/ConstantValue\";\nimport {FunctionValueGenerator, ValueGenerator} from \"../particle/functions/ValueGenerator\";\nimport {ColorGenerator, ConstantColor, FunctionColorGenerator} from \"../particle/functions/ColorGenerator\";\nimport {Object3D, Vector4} from \"three\";\nimport {ObjectProperties} from \"./ObjectProperties\";\nimport {ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {ParticleEmitter} from \"../particle/ParticleEmitter\";\nimport {ParticleSystemProperties} from \"./ParticleSystemProperties\";\nimport {ParticleRendererProperties} from \"./ParticleRendererProperties\";\nimport \"./PropertiesEditor.scss\";\n\ninterface PropertiesEditorProps {\n    object3d: Object3D\n}\n\ninterface PropertiesEditorState {\n    activeIndex: number;\n    value: string;\n    valueGenerator: ValueGenerator | FunctionValueGenerator | ColorGenerator | FunctionColorGenerator\n    colorGenerator: ValueGenerator | FunctionValueGenerator | ColorGenerator | FunctionColorGenerator\n}\n\nexport class PropertiesEditor extends React.PureComponent<PropertiesEditorProps, PropertiesEditorState> {\n    state = {\n        activeIndex: 0,\n        value: \"1\",\n        valueGenerator: new ConstantValue(5),\n        colorGenerator: new ConstantColor(new Vector4(1.0, 0, 0, 1))\n    };\n\n    render() {\n        let panels = [];\n        panels.push({\n           key: 0,\n           title: {\n               icon: {name: 'dropdown'},\n               content: \"Object\",\n           },\n           content: {\n               children:\n                    <ApplicationContextConsumer>\n                        {context => context &&\n                            <ObjectProperties object3d={this.props.object3d}\n                                              updateProperties={context.actions.updateProperties}/>\n                        }\n                    </ApplicationContextConsumer>\n            }\n        });\n\n        if (this.props.object3d instanceof ParticleEmitter) {\n            const system = this.props.object3d.system;\n            panels.push({\n                key: 1,\n                title: {\n                    icon: {name: 'dropdown'},\n                    content: \"Particle Emitter\",\n                },\n                content: {\n                    children:\n                        <ApplicationContextConsumer>\n                            {context => context &&\n                                <ParticleSystemProperties particleSystem={system}\n                                                  updateProperties={context.actions.updateProperties}/>\n                            }\n                        </ApplicationContextConsumer>\n                }\n            });\n\n            panels.push({\n                key: 2,\n                title: {\n                    icon: {name: 'dropdown'},\n                    content: \"Particle Renderer\",\n                },\n                content: {\n                    children:\n                        <ApplicationContextConsumer>\n                            {context => context &&\n                                <ParticleRendererProperties particleSystem={system}\n                                                          updateProperties={context.actions.updateProperties}/>\n                            }\n                        </ApplicationContextConsumer>\n                }\n            });\n        }\n        return (\n            <Accordion fluid styled panels={panels} exclusive={false}>\n            </Accordion>\n        );\n    }\n}\n/*\n<Accordion.Title active={activeIndex === 1} index={1} onClick={this.handleClick}>\n    <Icon name='dropdown'/>\n    Emission\n</Accordion.Title>\n<Accordion.Content active={activeIndex === 1}>\n<div><GeneratorEditor name=\"startSpeed\"\nallowedType={['value', 'function'] as Array<ValueType>}\ngenerator={this.state.valueGenerator}\nupdateGenerator={g => this.setState({valueGenerator: g})}/></div>\n<div><GeneratorEditor name=\"startColor\"\nallowedType={['color', 'functionColor'] as Array<ValueType>}\ngenerator={this.state.colorGenerator}\nupdateGenerator={g => this.setState({colorGenerator: g})}/></div>\n</Accordion.Content>\n\n<Accordion.Title active={activeIndex === 2} index={2} onClick={this.handleClick}>\n    <Icon name='dropdown'/>\n    Renderer\n    </Accordion.Title>\n    <Accordion.Content active={activeIndex === 2}>\n</Accordion.Content>\n\n<Accordion.Title active={activeIndex === 3} index={3} onClick={this.handleClick}>\n    <Icon name='dropdown'/>\n    Emission Shape\n</Accordion.Title>\n<Accordion.Content active={activeIndex === 3}>\n<Select placeholder='Emitter' options={this.emitterOptions}/>\n</Accordion.Content>*/\n","import React from \"react\";\nimport {AppContext, ApplicationContextConsumer} from \"./ApplicationContext\";\nimport {Object3D, Scene} from \"three\";\nimport {ParticleSystem} from \"../particle/ParticleSystem\";\nimport {ParticleEmitter} from \"../particle/ParticleEmitter\";\nimport './SceneGraphView.scss';\nimport {Item, Menu, MenuProvider, Separator, Submenu} from \"react-contexify\";\nimport {MenuItemEventHandler} from \"react-contexify/lib/types\";\nimport 'react-contexify/dist/ReactContexify.min.css';\n\ninterface SceneGraphItemViewProps {\n    selected: boolean;\n    object3d: Object3D;\n    onClick: (a: React.MouseEvent) => void;\n    indent: number;\n}\n\nconst SceneGraphItemView: React.FC<SceneGraphItemViewProps> = (props) => {\n\n    const getObjectName = (object3d: Object3D) => {\n        let type = 'object';\n        if (object3d instanceof ParticleEmitter) {\n            type = 'ParticleSystem';\n        } else {\n            type =  object3d.type;\n        }\n        let name = 'unnamed';\n        if (object3d.name) {\n            name = object3d.name;\n        }\n        return `[${type}] ${name}`;\n    };\n\n    let className = 'item';\n    if (props.selected) {\n        className += ' selected';\n    }\n\n    return <MenuProvider id=\"scene-graph-menu\" data={{object3d: props.object3d}}>\n        <li className={className} onClick={props.onClick} style={{marginLeft: props.indent + 'em'}}>\n        {getObjectName(props.object3d)}\n        </li>\n    </MenuProvider>;\n};\n\ninterface SceneGraphViewProps {\n    context: AppContext\n    scene: Scene;\n}\n\ninterface SceneGraphViewState {\n    openedIndex: Array<number>\n}\n\nexport class SceneGraphView extends React.Component<SceneGraphViewProps, SceneGraphViewState> {\n\n    shouldComponentUpdate(nextProps: Readonly<SceneGraphViewProps>, nextState: Readonly<SceneGraphViewState>, nextContext: any): boolean {\n        //TODO\n        return true;\n    }\n\n    constructor(props: Readonly<SceneGraphViewProps>) {\n        super(props);\n        this.state = {\n            openedIndex: [0]\n        }\n    }\n\n    renderObject(context: AppContext, object3d: THREE.Object3D, index: number, indent: number): [React.ReactNodeArray, number] {\n        let items = [];\n        items.push(\n            <SceneGraphItemView key={object3d.uuid} onClick={()=>this.onClick(context, object3d)} object3d={object3d} selected={context.selection.indexOf(object3d) !== -1} indent={indent}>\n            </SceneGraphItemView>);\n        index ++;\n        for (let child of object3d.children) {\n            const result = this.renderObject(context, child, index, indent + 1);\n            items.push(result[0]);\n            index = result[1];\n        }\n        return ([items, index]);\n    }\n\n    onContextMenuClick = ({event, props}: MenuItemEventHandler) => console.log(event,props);\n\n    onContextMenuAddParticleSystem = ({event, props}: MenuItemEventHandler) => {\n        if ((props! as any).object3d) {\n            this.props.context.actions.addObject3d('particle', (props! as any).object3d);\n        }\n    };\n    onContextMenuRemove = ({event, props}: MenuItemEventHandler) => {\n        if ((props! as any).object3d) {\n            this.props.context.actions.removeObject3d((props! as any).object3d);\n        }\n    };\n\n    renderScene(context: AppContext, scene: THREE.Scene) {\n        return <ul> {this.renderObject(context, scene, 0, 0)[0]} </ul>;\n    }\n\n    render() {\n        return <div>.\n            {this.renderScene(this.props.context, this.props.scene)}\n            <Menu id=\"scene-graph-menu\">\n                <Submenu label=\"Add\">\n                    <Item onClick={this.onContextMenuAddParticleSystem}>Particle System</Item>\n                    <Item onClick={this.onContextMenuClick}>Ball</Item>\n                </Submenu>\n                <Separator />\n                <Item onClick={this.onContextMenuRemove}>Remove</Item>\n                <Item disabled>Dolor</Item>\n            </Menu>\n        </div>;\n    }\n\n    onClick = (context: AppContext, object3d: Object3D) => {\n        //if (object3d.children.length === 0)\n        context.actions.select(object3d);\n    };\n}\n","import * as React from \"react\";\nimport {MainMenu} from \"./MainMenu\";\nimport {ThreejsViewport} from \"./ThreejsViewport\";\nimport {PropertiesEditor} from \"./PropertiesEditor\";\nimport {SceneGraphView} from \"./SceneGraphView\";\n\nimport './layout.scss';\nimport {ApplicationContextConsumer, ApplicationContextProvider} from \"./ApplicationContext\";\n\ninterface ApplicationProps {\n}\n\nexport class Application extends React.Component<ApplicationProps> {\n\n    constructor(props: Readonly<ApplicationProps>) {\n        super(props);\n    }\n\n\n    render() {\n        console.log(\"render application\");\n        return (\n            <ApplicationContextProvider>\n                <div className=\"application\">\n                    <div className=\"main-menu\">\n                        <ApplicationContextConsumer>\n                            {context => context &&\n                                <MainMenu onSaveAs={context.actions.onSaveAs}></MainMenu>\n                            }\n                        </ApplicationContextConsumer>\n                    </div>\n                    <div className=\"main\">\n                        <div className=\"viewport\">\n                            <ThreejsViewport width={600} height={600}/>\n                        </div>\n                        <div className=\"sidebar\">\n                            <ApplicationContextConsumer>\n                                {\n                                    context => context && <SceneGraphView context={context} scene={context.scene} />\n                                }\n                            </ApplicationContextConsumer>\n                            <ApplicationContextConsumer>\n                                { context => context && context.selection.length > 0 &&\n                                    <PropertiesEditor object3d={context.selection[0]}/>\n                                }\n                            </ApplicationContextConsumer>\n                        </div>\n                    </div>\n                </div>\n            </ApplicationContextProvider>);\n    }\n}\n","import React, {useState} from 'react';\nimport {PiecewiseBezier} from \"./particle/functions/PiecewiseBezier\";\nimport {Application} from \"./components/Application\";\nimport 'semantic-ui-css/semantic.min.css';\nimport {Bezier} from \"./particle/functions/Bezier\";\n\nconst App: React.FC = () => {\n\n  const [bezierCurves, setBezierCurves] = useState(\n      new PiecewiseBezier([\n        [new Bezier(0, 0.5 / 3, 0.5 / 3 * 2, 0.5), 0],\n        [new Bezier(0.5, 0.5, 0.5, 0.5), 0.5],\n      ])\n  );\n\n  return (<Application />\n  );\n    /*<div className=\"App\">\n        <header className=\"App-header\">\n            <BezierCurvesEditor width={200} height={100} value={bezierCurves} onChange={(bezierCurves) => {setBezierCurves(bezierCurves)}}/>\n        </header>\n    </div>*/\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}